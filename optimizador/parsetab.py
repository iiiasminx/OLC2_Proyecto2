
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftmasmenosleftasteriscodivididoleftmoduloleftandorleftmayorquemayoriwalmenorquemenoriwaliwaliwaldistintoqueleftparentesisaparentesiscand asterisco cadena cambiolinea char coma comentario corchetea corchetec distintoque dividido dospuntos float64 flotante fmt func goto h heap id if igual impc impd impf int intpunto iwaliwal llavesa llavesc main mas mayoriwal mayorque menoriwal menorque menos modulo or p parentesisa parentesisc printf println punto puntocoma return salto stack tab temporalINICIO : INSTRUCCIONESINSTRUCCIONES : INSTRUCCIONES INSTRUCCION  INSTRUCCIONES :  INSTRUCCION INSTRUCCION  :  INICIOSALTO\n                    | INICIOGOTO\n                    | CREARIF\n                    | ASIGNACION\n                    | IMPRESION\n                    | LLAMADAMETODO\n                    | METODO INICIOSALTO : salto dospuntos  INICIOGOTO : goto salto puntocoma  CREARIF : if parentesisa IZQ SIMBOLO IZQ parentesisc llavesa goto salto llavesc  ASIGNACION : LADO igual LADO puntocoma IMPRESION : fmt punto printf parentesisa TIPOCHAR coma ICHAR parentesisc puntocomaLLAMADAMETODO : id parentesisa parentesisc puntocomaMETODO : func id parentesisa parentesisc llavesa INSTRUCCIONES return puntocoma llavescMETODO : func main parentesisa parentesisc llavesa INSTRUCCIONES llavesc ICHAR : int parentesisa DER parentesisc ICHAR : IZQTIPOCHAR : impc\n            | impd\n            | impfLADO : OPERACION\n            | GETSTACK\n            | GETHEAP\n            | DEROPERACION : DER OP DERDER : IZQ\n            | h\n            | pGETSTACK : stack corchetea int parentesisa DER parentesisc corchetecGETHEAP : heap corchetea int parentesisa DER parentesisc corchetecIZQ : int\n            | temporal\n            | flotante\n            | NEGSIMBOLO : mayorque\n            | menorque\n            | mayoriwal\n            | menoriwal\n            | iwaliwal\n            | distintoque\n            | and\n            | orOP : mas\n        | menos\n        | asterisco\n        | dividido\n        | moduloNEG : menos int\n        | menos flotante'
    
_lr_action_items = {'salto':([0,2,3,4,5,6,7,8,9,10,12,32,33,51,70,72,82,83,88,89,97,100,105,107,108,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,34,-2,-11,-12,-14,-16,11,11,11,11,-18,104,-15,-17,-13,]),'goto':([0,2,3,4,5,6,7,8,9,10,32,33,51,70,72,82,83,88,89,92,97,105,107,108,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,12,12,12,12,100,-18,-15,-17,-13,]),'if':([0,2,3,4,5,6,7,8,9,10,32,33,51,70,72,82,83,88,89,97,105,107,108,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,13,13,13,13,-18,-15,-17,-13,]),'fmt':([0,2,3,4,5,6,7,8,9,10,32,33,51,70,72,82,83,88,89,97,105,107,108,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,16,16,16,16,-18,-15,-17,-13,]),'id':([0,2,3,4,5,6,7,8,9,10,18,32,33,51,70,72,82,83,88,89,97,105,107,108,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,39,-2,-11,-12,-14,-16,17,17,17,17,-18,-15,-17,-13,]),'func':([0,2,3,4,5,6,7,8,9,10,32,33,51,70,72,82,83,88,89,97,105,107,108,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,18,18,18,18,-18,-15,-17,-13,]),'stack':([0,2,3,4,5,6,7,8,9,10,32,33,36,51,70,72,82,83,88,89,97,105,107,108,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,23,-12,-14,-16,23,23,23,23,-18,-15,-17,-13,]),'heap':([0,2,3,4,5,6,7,8,9,10,32,33,36,51,70,72,82,83,88,89,97,105,107,108,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,25,-12,-14,-16,25,25,25,25,-18,-15,-17,-13,]),'h':([0,2,3,4,5,6,7,8,9,10,32,33,36,41,42,43,44,45,46,51,70,72,75,76,82,83,88,89,97,102,105,107,108,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,26,26,-46,-47,-48,-49,-50,-12,-14,-16,26,26,26,26,26,26,-18,26,-15,-17,-13,]),'p':([0,2,3,4,5,6,7,8,9,10,32,33,36,41,42,43,44,45,46,51,70,72,75,76,82,83,88,89,97,102,105,107,108,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,27,27,-46,-47,-48,-49,-50,-12,-14,-16,27,27,27,27,27,27,-18,27,-15,-17,-13,]),'int':([0,2,3,4,5,6,7,8,9,10,31,32,33,35,36,41,42,43,44,45,46,47,48,51,61,62,63,64,65,66,67,68,69,70,72,75,76,82,83,87,88,89,97,102,105,107,108,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,49,-2,-11,24,24,24,-46,-47,-48,-49,-50,59,60,-12,24,-38,-39,-40,-41,-42,-43,-44,-45,-14,-16,24,24,24,24,94,24,24,-18,24,-15,-17,-13,]),'temporal':([0,2,3,4,5,6,7,8,9,10,32,33,35,36,41,42,43,44,45,46,51,61,62,63,64,65,66,67,68,69,70,72,75,76,82,83,87,88,89,97,102,105,107,108,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,28,28,28,-46,-47,-48,-49,-50,-12,28,-38,-39,-40,-41,-42,-43,-44,-45,-14,-16,28,28,28,28,28,28,28,-18,28,-15,-17,-13,]),'flotante':([0,2,3,4,5,6,7,8,9,10,31,32,33,35,36,41,42,43,44,45,46,51,61,62,63,64,65,66,67,68,69,70,72,75,76,82,83,87,88,89,97,102,105,107,108,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,50,-2,-11,29,29,29,-46,-47,-48,-49,-50,-12,29,-38,-39,-40,-41,-42,-43,-44,-45,-14,-16,29,29,29,29,29,29,29,-18,29,-15,-17,-13,]),'menos':([0,2,3,4,5,6,7,8,9,10,14,22,24,26,27,28,29,30,32,33,35,36,41,42,43,44,45,46,49,50,51,61,62,63,64,65,66,67,68,69,70,72,75,76,82,83,87,88,89,97,102,105,107,108,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-29,43,-34,-30,-31,-35,-36,-37,-2,-11,31,31,31,-46,-47,-48,-49,-50,-51,-52,-12,31,-38,-39,-40,-41,-42,-43,-44,-45,-14,-16,31,31,31,31,31,31,31,-18,31,-15,-17,-13,]),'$end':([1,2,3,4,5,6,7,8,9,10,32,33,51,70,72,97,105,107,108,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,-18,-15,-17,-13,]),'return':([3,4,5,6,7,8,9,10,32,33,51,70,72,88,97,105,107,108,],[-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,96,-18,-15,-17,-13,]),'llavesc':([3,4,5,6,7,8,9,10,32,33,51,70,72,89,97,103,104,105,107,108,],[-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-14,-16,97,-18,107,108,-15,-17,-13,]),'dospuntos':([11,],[33,]),'parentesisa':([13,17,39,40,54,59,60,94,],[35,38,56,57,71,75,76,102,]),'mas':([14,22,24,26,27,28,29,30,49,50,],[-29,42,-34,-30,-31,-35,-36,-37,-51,-52,]),'asterisco':([14,22,24,26,27,28,29,30,49,50,],[-29,44,-34,-30,-31,-35,-36,-37,-51,-52,]),'dividido':([14,22,24,26,27,28,29,30,49,50,],[-29,45,-34,-30,-31,-35,-36,-37,-51,-52,]),'modulo':([14,22,24,26,27,28,29,30,49,50,],[-29,46,-34,-30,-31,-35,-36,-37,-51,-52,]),'igual':([14,15,19,20,21,22,24,26,27,28,29,30,49,50,58,98,99,],[-29,36,-24,-25,-26,-27,-34,-30,-31,-35,-36,-37,-51,-52,-28,-32,-33,]),'puntocoma':([14,19,20,21,22,24,26,27,28,29,30,34,49,50,53,55,58,96,98,99,101,],[-29,-24,-25,-26,-27,-34,-30,-31,-35,-36,-37,51,-51,-52,70,72,-28,103,-32,-33,105,]),'parentesisc':([14,24,26,27,28,29,30,38,49,50,56,57,77,84,85,93,94,95,106,109,],[-29,-34,-30,-31,-35,-36,-37,55,-51,-52,73,74,86,90,91,101,-34,-20,109,-19,]),'punto':([16,],[37,]),'main':([18,],[40,]),'corchetea':([23,25,],[47,48,]),'mayorque':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,62,]),'menorque':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,63,]),'mayoriwal':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,64,]),'menoriwal':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,65,]),'iwaliwal':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,66,]),'distintoque':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,67,]),'and':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,68,]),'or':([24,28,29,30,49,50,52,],[-34,-35,-36,-37,-51,-52,69,]),'printf':([37,],[54,]),'impc':([71,],[79,]),'impd':([71,],[80,]),'impf':([71,],[81,]),'llavesa':([73,74,86,],[82,83,92,]),'coma':([78,79,80,81,],[87,-21,-22,-23,]),'corchetec':([90,91,],[98,99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'INSTRUCCIONES':([0,82,83,],[2,88,89,]),'INSTRUCCION':([0,2,82,83,88,89,],[3,32,3,3,32,32,]),'INICIOSALTO':([0,2,82,83,88,89,],[4,4,4,4,4,4,]),'INICIOGOTO':([0,2,82,83,88,89,],[5,5,5,5,5,5,]),'CREARIF':([0,2,82,83,88,89,],[6,6,6,6,6,6,]),'ASIGNACION':([0,2,82,83,88,89,],[7,7,7,7,7,7,]),'IMPRESION':([0,2,82,83,88,89,],[8,8,8,8,8,8,]),'LLAMADAMETODO':([0,2,82,83,88,89,],[9,9,9,9,9,9,]),'METODO':([0,2,82,83,88,89,],[10,10,10,10,10,10,]),'IZQ':([0,2,35,36,41,61,75,76,82,83,87,88,89,102,],[14,14,52,14,14,77,14,14,14,14,95,14,14,14,]),'LADO':([0,2,36,82,83,88,89,],[15,15,53,15,15,15,15,]),'OPERACION':([0,2,36,82,83,88,89,],[19,19,19,19,19,19,19,]),'GETSTACK':([0,2,36,82,83,88,89,],[20,20,20,20,20,20,20,]),'GETHEAP':([0,2,36,82,83,88,89,],[21,21,21,21,21,21,21,]),'DER':([0,2,36,41,75,76,82,83,88,89,102,],[22,22,22,58,84,85,22,22,22,22,106,]),'NEG':([0,2,35,36,41,61,75,76,82,83,87,88,89,102,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'OP':([22,],[41,]),'SIMBOLO':([52,],[61,]),'TIPOCHAR':([71,],[78,]),'ICHAR':([87,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> INSTRUCCIONES','INICIO',1,'p_inicio','opt_sintactico.py',32),
  ('INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION','INSTRUCCIONES',2,'p_instrucciones','opt_sintactico.py',36),
  ('INSTRUCCIONES -> INSTRUCCION','INSTRUCCIONES',1,'p_instrucciones2','opt_sintactico.py',39),
  ('INSTRUCCION -> INICIOSALTO','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',42),
  ('INSTRUCCION -> INICIOGOTO','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',43),
  ('INSTRUCCION -> CREARIF','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',44),
  ('INSTRUCCION -> ASIGNACION','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',45),
  ('INSTRUCCION -> IMPRESION','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',46),
  ('INSTRUCCION -> LLAMADAMETODO','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',47),
  ('INSTRUCCION -> METODO','INSTRUCCION',1,'p_instruccion','opt_sintactico.py',48),
  ('INICIOSALTO -> salto dospuntos','INICIOSALTO',2,'p_inicioSalto','opt_sintactico.py',51),
  ('INICIOGOTO -> goto salto puntocoma','INICIOGOTO',3,'p_inicioGoto','opt_sintactico.py',56),
  ('CREARIF -> if parentesisa IZQ SIMBOLO IZQ parentesisc llavesa goto salto llavesc','CREARIF',10,'p_crearIf','opt_sintactico.py',61),
  ('ASIGNACION -> LADO igual LADO puntocoma','ASIGNACION',4,'p_asignacion','opt_sintactico.py',66),
  ('IMPRESION -> fmt punto printf parentesisa TIPOCHAR coma ICHAR parentesisc puntocoma','IMPRESION',9,'p_impresion','opt_sintactico.py',71),
  ('LLAMADAMETODO -> id parentesisa parentesisc puntocoma','LLAMADAMETODO',4,'p_llamadametodo','opt_sintactico.py',76),
  ('METODO -> func id parentesisa parentesisc llavesa INSTRUCCIONES return puntocoma llavesc','METODO',9,'p_metodo','opt_sintactico.py',81),
  ('METODO -> func main parentesisa parentesisc llavesa INSTRUCCIONES llavesc','METODO',7,'p_metodo2','opt_sintactico.py',89),
  ('ICHAR -> int parentesisa DER parentesisc','ICHAR',4,'p_ichar','opt_sintactico.py',102),
  ('ICHAR -> IZQ','ICHAR',1,'p_ichar2','opt_sintactico.py',106),
  ('TIPOCHAR -> impc','TIPOCHAR',1,'p_tipochar','opt_sintactico.py',110),
  ('TIPOCHAR -> impd','TIPOCHAR',1,'p_tipochar','opt_sintactico.py',111),
  ('TIPOCHAR -> impf','TIPOCHAR',1,'p_tipochar','opt_sintactico.py',112),
  ('LADO -> OPERACION','LADO',1,'p_lado','opt_sintactico.py',116),
  ('LADO -> GETSTACK','LADO',1,'p_lado','opt_sintactico.py',117),
  ('LADO -> GETHEAP','LADO',1,'p_lado','opt_sintactico.py',118),
  ('LADO -> DER','LADO',1,'p_lado','opt_sintactico.py',119),
  ('OPERACION -> DER OP DER','OPERACION',3,'p_operacion','opt_sintactico.py',123),
  ('DER -> IZQ','DER',1,'p_der','opt_sintactico.py',127),
  ('DER -> h','DER',1,'p_der','opt_sintactico.py',128),
  ('DER -> p','DER',1,'p_der','opt_sintactico.py',129),
  ('GETSTACK -> stack corchetea int parentesisa DER parentesisc corchetec','GETSTACK',7,'p_getstack','opt_sintactico.py',133),
  ('GETHEAP -> heap corchetea int parentesisa DER parentesisc corchetec','GETHEAP',7,'p_getheap','opt_sintactico.py',137),
  ('IZQ -> int','IZQ',1,'p_izq','opt_sintactico.py',141),
  ('IZQ -> temporal','IZQ',1,'p_izq','opt_sintactico.py',142),
  ('IZQ -> flotante','IZQ',1,'p_izq','opt_sintactico.py',143),
  ('IZQ -> NEG','IZQ',1,'p_izq','opt_sintactico.py',144),
  ('SIMBOLO -> mayorque','SIMBOLO',1,'p_simbolo','opt_sintactico.py',148),
  ('SIMBOLO -> menorque','SIMBOLO',1,'p_simbolo','opt_sintactico.py',149),
  ('SIMBOLO -> mayoriwal','SIMBOLO',1,'p_simbolo','opt_sintactico.py',150),
  ('SIMBOLO -> menoriwal','SIMBOLO',1,'p_simbolo','opt_sintactico.py',151),
  ('SIMBOLO -> iwaliwal','SIMBOLO',1,'p_simbolo','opt_sintactico.py',152),
  ('SIMBOLO -> distintoque','SIMBOLO',1,'p_simbolo','opt_sintactico.py',153),
  ('SIMBOLO -> and','SIMBOLO',1,'p_simbolo','opt_sintactico.py',154),
  ('SIMBOLO -> or','SIMBOLO',1,'p_simbolo','opt_sintactico.py',155),
  ('OP -> mas','OP',1,'p_op','opt_sintactico.py',159),
  ('OP -> menos','OP',1,'p_op','opt_sintactico.py',160),
  ('OP -> asterisco','OP',1,'p_op','opt_sintactico.py',161),
  ('OP -> dividido','OP',1,'p_op','opt_sintactico.py',162),
  ('OP -> modulo','OP',1,'p_op','opt_sintactico.py',163),
  ('NEG -> menos int','NEG',2,'p_neg','opt_sintactico.py',167),
  ('NEG -> menos flotante','NEG',2,'p_neg','opt_sintactico.py',168),
]
